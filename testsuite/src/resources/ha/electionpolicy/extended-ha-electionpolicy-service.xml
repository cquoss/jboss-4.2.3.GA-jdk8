<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE server>
<server>
   <!-- First HASingleton, Election policy is to choose the oldest node as master -->
   <mbean code="org.jboss.ha.singleton.examples.HASingletonMBeanExample" 
          name="jboss.examples:service=HASingletonMBeanExample_1">
   </mbean>

   <mbean code="org.jboss.ha.singleton.ExtendedElectionPolicySimple"
          name="jboss.examples:service=HASingletonMBeanExample-ExtendedElectionPolicySimple_1">
     <attribute name="Position">0</attribute>
   </mbean>

   <mbean code="org.jboss.ha.singleton.HASingletonController" 
          name="jboss.examples:service=HASingletonMBeanExample-HASingletonController_1">
      
      <depends optional-attribute-name="ClusterPartition"
         proxy-type="attribute">test:service=ElectionPolicyTestPartition</depends>
      <depends>jboss.examples:service=HASingletonMBeanExample_1</depends>
      <depends optional-attribute-name="ElectionPolicy"
         proxy-type="attribute">jboss.examples:service=HASingletonMBeanExample-ExtendedElectionPolicySimple_1</depends>
      <attribute name="TargetName">jboss.examples:service=HASingletonMBeanExample_1</attribute>
      <attribute name="TargetStartMethod">startSingleton</attribute>
      <attribute name="TargetStopMethod">stopSingleton</attribute>
      <attribute name="TargetStopMethodArgument">true</attribute>
   </mbean>

   <!-- Second HASingleton, Election policy is to choose the youngest node as master -->
   <mbean code="org.jboss.ha.singleton.examples.HASingletonMBeanExample" 
          name="jboss.examples:service=HASingletonMBeanExample_2">
   </mbean>

   <mbean code="org.jboss.ha.singleton.ExtendedElectionPolicySimple"
          name="jboss.examples:service=HASingletonMBeanExample-ExtendedElectionPolicySimple_2">
     <attribute name="Position">-1</attribute>
   </mbean>

   <mbean code="org.jboss.ha.singleton.HASingletonController" 
          name="jboss.examples:service=HASingletonMBeanExample-HASingletonController_2">
      
      <depends optional-attribute-name="ClusterPartition"
         proxy-type="attribute">test:service=ElectionPolicyTestPartition</depends>
      <depends>jboss.examples:service=HASingletonMBeanExample_2</depends>
      <depends optional-attribute-name="ElectionPolicy"
         proxy-type="attribute">jboss.examples:service=HASingletonMBeanExample-ExtendedElectionPolicySimple_2</depends>
      <attribute name="TargetName">jboss.examples:service=HASingletonMBeanExample_2</attribute>
      <attribute name="TargetStartMethod">startSingleton</attribute>
      <attribute name="TargetStopMethod">stopSingleton</attribute>
      <attribute name="TargetStopMethodArgument">true</attribute>
   </mbean>

   <!-- Third HASingleton, Election policy is to choose the 2nd oldest node as master -->
   <mbean code="org.jboss.ha.singleton.examples.HASingletonMBeanExample" 
          name="jboss.examples:service=HASingletonMBeanExample_3">
   </mbean>

   <mbean code="org.jboss.ha.singleton.ExtendedElectionPolicySimple"
          name="jboss.examples:service=HASingletonMBeanExample-ExtendedElectionPolicySimple_3">
     <attribute name="Position">1</attribute>
   </mbean>

   <mbean code="org.jboss.ha.singleton.HASingletonController" 
          name="jboss.examples:service=HASingletonMBeanExample-HASingletonController_3">
      
      <depends optional-attribute-name="ClusterPartition"
         proxy-type="attribute">test:service=ElectionPolicyTestPartition</depends>
      <depends>jboss.examples:service=HASingletonMBeanExample_3</depends>
      <depends optional-attribute-name="ElectionPolicy"
         proxy-type="attribute">jboss.examples:service=HASingletonMBeanExample-ExtendedElectionPolicySimple_3</depends>
      <attribute name="TargetName">jboss.examples:service=HASingletonMBeanExample_3</attribute>
      <attribute name="TargetStartMethod">startSingleton</attribute>
      <attribute name="TargetStopMethod">stopSingleton</attribute>
      <attribute name="TargetStopMethodArgument">true</attribute>
   </mbean>

   <!-- Fourth HASingleton, No election policy defined. By default, the oldest node is selected -->
   <mbean code="org.jboss.ha.singleton.examples.HASingletonMBeanExample" 
          name="jboss.examples:service=HASingletonMBeanExample_4">
   </mbean>

   <mbean code="org.jboss.ha.singleton.HASingletonController" 
          name="jboss.examples:service=HASingletonMBeanExample-HASingletonController_4">
      
      <depends optional-attribute-name="ClusterPartition"
         proxy-type="attribute">test:service=ElectionPolicyTestPartition</depends>
      <depends>jboss.examples:service=HASingletonMBeanExample_4</depends>
      <attribute name="TargetName">jboss.examples:service=HASingletonMBeanExample_4</attribute>
      <attribute name="TargetStartMethod">startSingleton</attribute>
      <attribute name="TargetStopMethod">stopSingleton</attribute>
      <attribute name="TargetStopMethodArgument">true</attribute>
   </mbean>

   <!-- ==================================================================== -->
   <!-- Partition used by the above beans                                    -->
   <!-- ==================================================================== -->

   <mbean code="org.jboss.ha.framework.server.ClusterPartition"
      name="test:service=ElectionPolicyTestPartition">      

      <!-- Name of the partition being built -->
      <attribute name="PartitionName">ElectionPolicyTestPartition</attribute>

      <!-- The address used to determine the node name -->
      <attribute name="NodeAddress">${jboss.bind.address}</attribute>

      <!-- Determine if deadlock detection is enabled -->
      <attribute name="DeadlockDetection">False</attribute>
     
      <!-- Keep this timeout short -->
      <attribute name="StateTransferTimeout">2000</attribute>

      <!-- The JGroups protocol configuration -->
      <attribute name="PartitionConfig">
         <!--
         The default UDP stack:
         - If you have a multihomed machine, set the UDP protocol's bind_addr attribute to the
         appropriate NIC IP address, e.g bind_addr="192.168.0.2".
         - On Windows machines, because of the media sense feature being broken with multicast
         (even after disabling media sense) set the UDP protocol's loopback attribute to true
         -->
         <Config>
            <UDP mcast_addr="${jboss.partition.udpGroup:228.1.2.3}" 
                 mcast_port="${jboss.hapartition.mcast_port:45566}"
                 tos="8"
                 ucast_recv_buf_size="20000000"
                 ucast_send_buf_size="640000"
                 mcast_recv_buf_size="25000000"
                 mcast_send_buf_size="640000"
                 loopback="false"
                 discard_incompatible_packets="true"
                 enable_bundling="false"
                 max_bundle_size="64000"
                 max_bundle_timeout="30"
                 use_incoming_packet_handler="true"
                 use_outgoing_packet_handler="false"
                 ip_ttl="${jgroups.udp.ip_ttl:2}"
                 down_thread="false" up_thread="false"/>
            <PING timeout="2000"
                  down_thread="false" up_thread="false" num_initial_members="3"/>
            <MERGE2 max_interval="100000"
                    down_thread="false" up_thread="false" min_interval="20000"/>
            <FD_SOCK down_thread="false" up_thread="false"/>
            <FD timeout="10000" max_tries="5" down_thread="false" up_thread="false" shun="true"/>
            <VERIFY_SUSPECT timeout="1500" down_thread="false" up_thread="false"/>
            <pbcast.NAKACK max_xmit_size="60000"
                    use_mcast_xmit="false" gc_lag="0"
                    retransmit_timeout="300,600,1200,2400,4800"
                    down_thread="false" up_thread="false"
                    discard_delivered_msgs="true"/>
            <UNICAST timeout="300,600,1200,2400,3600"
                    down_thread="false" up_thread="false"/>
            <pbcast.STABLE stability_delay="1000" desired_avg_gossip="50000"
                    down_thread="false" up_thread="false"
                    max_bytes="400000"/>
            <pbcast.GMS print_local_addr="true" join_timeout="3000"
                    down_thread="false" up_thread="false"
                    join_retry_timeout="2000" shun="true"
                    view_bundling="true"/>
            <FRAG2 frag_size="60000" down_thread="false" up_thread="false"/>
            <pbcast.STATE_TRANSFER down_thread="false" up_thread="false" use_flush="false"/>
         </Config>

         <!-- Alternate TCP stack: customize it for your environment, change bind_addr and initial_hosts -->
         <!--
         <Config>
            <TCP bind_addr="thishost" start_port="7800" loopback="true"
                 tcp_nodelay="true"
                 recv_buf_size="20000000"
                 send_buf_size="640000"
                 discard_incompatible_packets="true"
                 enable_bundling="false"
                 max_bundle_size="64000"
                 max_bundle_timeout="30"
                 use_incoming_packet_handler="true"
                 use_outgoing_packet_handler="false"
                 down_thread="false" up_thread="false"
                 use_send_queues="false"
                 sock_conn_timeout="300"
                 skip_suspected_members="true"/>
            <TCPPING initial_hosts="thishost[7800],otherhost[7800]" port_range="3"
                     timeout="3000"
                     down_thread="false" up_thread="false"
                     num_initial_members="3"/>
            <MERGE2 max_interval="100000"
                    down_thread="false" up_thread="false" min_interval="20000"/>
            <FD_SOCK down_thread="false" up_thread="false"/>
            <FD timeout="10000" max_tries="5" down_thread="false" up_thread="false" shun="true"/>
            <VERIFY_SUSPECT timeout="1500" down_thread="false" up_thread="false"/>
            <pbcast.NAKACK max_xmit_size="60000"
                           use_mcast_xmit="false" gc_lag="0"
                           retransmit_timeout="300,600,1200,2400,4800"
                           down_thread="false" up_thread="false"
                           discard_delivered_msgs="true"/>
            <pbcast.STABLE stability_delay="1000" desired_avg_gossip="50000"
                           down_thread="false" up_thread="false"
                           max_bytes="400000"/>
            <pbcast.GMS print_local_addr="true" join_timeout="3000"
                        down_thread="false" up_thread="false"
                        join_retry_timeout="2000" shun="true"
                        view_bundling="true"/>
            <pbcast.STATE_TRANSFER down_thread="false" up_thread="false" use_flush="false"/>
         </Config>
         -->
       </attribute>

   </mbean>

</server>
